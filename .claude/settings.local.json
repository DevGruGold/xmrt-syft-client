{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(python:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(# Create the wallet directory for liamtrask\nmkdir -p ~/.syft/gdrive/liamtrask_at_gmail_com\n\n# Copy the credentials\ncp ~/Downloads/credentials.json ~/.syft/gdrive/liamtrask_at_gmail_com/credentials.json\n\n# Create account info\necho ''{\"\"email\"\": \"\"liamtrask@gmail.com\"\"}'' > ~/.syft/gdrive/liamtrask_at_gmail_com/account_info.json\n\necho \"\"âœ… Manually added liamtrask@gmail.com to wallet\"\"\nls -la ~/.syft/gdrive/liamtrask_at_gmail_com/)",
      "Bash(grep:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(git restore:*)",
      "WebFetch(domain:openmined.github.io)",
      "WebFetch(domain:www.speakeasy.com)",
      "Bash(uv pip install:*)",
      "Bash(uv run:*)",
      "Bash(uv add:*)",
      "Bash(timeout 5 uv run:*)",
      "Bash(pkill:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(cut:*)",
      "Bash(git rm:*)",
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr reopen:*)",
      "Bash(git checkout:*)",
      "Bash(uv build:*)",
      "Bash(uv publish:*)",
      "Bash(uv publish:*)",
      "Bash(diff:*)",
      "Bash(git tag:*)",
      "Bash(awk:*)",
      "Bash(diff:*)",
      "Bash(-e 's/[Cc]ontact[Dd]iscovery/PeerDiscovery/g' )",
      "Bash(-e 's/[Cc]ontact[Rr]equest/PeerRequest/g' )",
      "Bash(-e 's/[Cc]ontact[Rr]esource/PeerResource/g' )",
      "Bash(-e 's/from \\.contact_model import Contact/from .peer_model import Peer/g' )",
      "Bash(-e 's/from \\.contact_request import/from .peer_request import/g' )",
      "Bash(-e 's/from \\.contact_resource import/from .peer_resource import/g' )",
      "Bash(-e 's/: Contact/: Peer/g' )",
      "Bash(-e 's/Contact\\(/Peer(/g' )",
      "Bash(-e 's/\\.contacts/\\.peers/g' )",
      "Bash(-e 's/_contacts/_peers/g' )",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact/get_peer/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/Contact management/Peer management/g' )",
      "Bash(-e 's/contact management/peer management/g' )",
      "Bash(-e 's/contact\\./peer./g' )",
      "Bash(-e 's/\"\"contact\"\"/\"\"peer\"\"/g' )",
      "Bash(-e 's/\"\"Contact\"\"/\"\"Peer\"\"/g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/ contact/ peer/g' )",
      "Bash(-e 's/ Contact/ Peer/g' )",
      "Bash(syft_client/sync/peers.py)",
      "Bash(-e 's/ContactDiscovery/PeerDiscovery/g' )",
      "Bash(-e 's/ContactRequest/PeerRequest/g' )",
      "Bash(-e 's/ContactResource/PeerResource/g' )",
      "Bash(-e 's/Contact(/Peer(/g' )",
      "Bash(-e 's/: Contact/: Peer/g' )",
      "Bash(-e 's/\\.contact_model/\\.peer_model/g' )",
      "Bash(-e 's/\\.contact_request/\\.peer_request/g' )",
      "Bash(-e 's/\\.contact_resource/\\.peer_resource/g' )",
      "Bash(-e 's/\\.contacts/\\.peers/g' )",
      "Bash(-e 's/_contacts/_peers/g' )",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact/get_peer/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/Contact management/Peer management/g' )",
      "Bash(-e 's/contact management/peer management/g' )",
      "Bash(-e 's/contacts_list/peers_list/g' )",
      "Bash(-e 's/contacts_dict/peers_dict/g' )",
      "Bash(-e 's/_load_or_create_contact/_load_or_create_peer/g' )",
      "Bash(-e 's/_save_contact/_save_peer/g' )",
      "Bash(-e 's/_discover_contact_capabilities/_discover_peer_capabilities/g' )",
      "Bash(-e 's/platforms_with_contact/platforms_with_peer/g' )",
      "Bash(-e 's/transports_with_contact/transports_with_peer/g' )",
      "Bash(-e 's/\\bcontact\\b/peer/g' )",
      "Bash(-e 's/\\bContact\\b/Peer/g' )",
      "Bash(-e 's/contacts_dir/peers_dir/g' )",
      "Bash(-e 's/_get_contacts_directory/_get_peers_directory/g' )",
      "Bash(-e 's/contacts_/peers_/g' )",
      "Bash(-e 's/contact\\./peer./g' )",
      "Bash(-e 's/\"\"contact\"\"/\"\"peer\"\"/g' )",
      "Bash(-e 's/\"\"Contact\"\"/\"\"Peer\"\"/g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/ contact/ peer/g' )",
      "Bash(-e 's/ Contact/ Peer/g' )",
      "Bash(-e 's/check_all_contact_requests/check_all_peer_requests/g' )",
      "Bash(-e 's/contact management/peer management/g' )",
      "Bash(-e 's/send_to_contacts/send_to_peers/g' )",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/ContactRequest/PeerRequest/g' )",
      "Bash(-e 's/\\.contacts_manager/.peers_manager/g' )",
      "Bash(-e 's/\\.contacts/.peers/g' )",
      "Bash(-e 's/ContactsProperty/PeersProperty/g' )",
      "Bash(-e 's/contact_list/peer_list/g' )",
      "Bash(-e 's/get_contact/get_peer/g' )",
      "Bash(-e 's/Contact index/Peer index/g' )",
      "Bash(-e 's/\"\"Contact /\"\"Peer /g' )",
      "Bash(-e 's/ contact\\./ peer./g' )",
      "Bash(-e 's/contact = /peer = /g' )",
      "Bash(-e 's/if contact:/if peer:/g' )",
      "Bash(-e 's/return contact/return peer/g' )",
      "Bash(-e 's/contact\\[/peer[/g' )",
      "Bash(-e 's/contact_/peer_/g' )",
      "Bash(-e 's/Contact\\[/Peer[/g' )",
      "Bash(-e 's/all contacts/all peers/g' )",
      "Bash(-e 's/as contact/as peer/g' )",
      "Bash(-e 's/ contact / peer /g' )",
      "Bash(-e 's/contact:/peer:/g' )",
      "Bash(-e 's/check_all_contact_requests/check_all_peer_requests/g' )",
      "Bash(syft_client/syft_client.py)",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact_resource/get_peer_resource/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/contact to add/peer to add/g' )",
      "Bash(-e 's/contact to remove/peer to remove/g' )",
      "Bash(-e 's/contact from/peer from/g' )",
      "Bash(-e 's/contact list/peer list/g' )",
      "Bash(-e 's/contact resources/peer resources/g' )",
      "Bash(-e 's/contact requests/peer requests/g' )",
      "Bash(-e 's/Contact was/Peer was/g' )",
      "Bash(-e 's/ContactResource/PeerResource/g' )",
      "Bash(-e 's/List of contacts/List of peers/g' )",
      "Bash(-e 's/incoming contact/incoming peer/g' )",
      "Bash(syft_client/transports/base.py)",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact_resource/get_peer_resource/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/_ensure_contacts_folder/_ensure_peers_folder/g' )",
      "Bash(-e 's/_find_contacts_folder/_find_peers_folder/g' )",
      "Bash(-e 's/_find_contact_folder/_find_peer_folder/g' )",
      "Bash(-e 's/contact folder/peer folder/g' )",
      "Bash(-e 's/contact to add/peer to add/g' )",
      "Bash(-e 's/contact to remove/peer to remove/g' )",
      "Bash(-e 's/contact on/peer on/g' )",
      "Bash(-e 's/contact for/peer for/g' )",
      "Bash(-e 's/contact requests/peer requests/g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/ContactResource/PeerResource/g' )",
      "Bash(-e 's/contacts folder/peers folder/g' )",
      "Bash(-e 's/contacts\\//peers\\//g' )",
      "Bash(-e 's/List contacts/List peers/g' )",
      "Bash(syft_client/platforms/google_personal/gdrive_files.py syft_client/platforms/google_org/gdrive_files.py)",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact_resource/get_peer_resource/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/contact to add/peer to add/g' )",
      "Bash(-e 's/contact to remove/peer to remove/g' )",
      "Bash(-e 's/contact with/peer with/g' )",
      "Bash(-e 's/contact for/peer for/g' )",
      "Bash(-e 's/contact requests/peer requests/g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/ContactResource/PeerResource/g' )",
      "Bash(-e 's/List of contacts/List of peers/g' )",
      "Bash(-e 's/incoming contact/incoming peer/g' )",
      "Bash(-e 's/contact_email/peer_email/g' )",
      "Bash(-e 's/\\.contact_resource/.peer_resource/g' )",
      "Bash(syft_client/platforms/google_personal/gsheets.py syft_client/platforms/google_org/gsheets.py)",
      "Bash(-e 's/add_contact/add_peer/g' )",
      "Bash(-e 's/remove_contact/remove_peer/g' )",
      "Bash(-e 's/list_contacts/list_peers/g' )",
      "Bash(-e 's/get_contact_resource/get_peer_resource/g' )",
      "Bash(-e 's/check_contact_requests/check_peer_requests/g' )",
      "Bash(-e 's/contact to add/peer to add/g' )",
      "Bash(-e 's/contact to remove/peer to remove/g' )",
      "Bash(-e 's/contact with/peer with/g' )",
      "Bash(-e 's/contact for/peer for/g' )",
      "Bash(-e 's/contact requests/peer requests/g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/ContactResource/PeerResource/g' )",
      "Bash(-e 's/List of contacts/List of peers/g' )",
      "Bash(-e 's/incoming contact/incoming peer/g' )",
      "Bash(-e 's/contact_email/peer_email/g' )",
      "Bash(-e 's/\\.contact_resource/.peer_resource/g' )",
      "Bash(syft_client/platforms/google_personal/gmail.py syft_client/platforms/google_org/gmail.py)",
      "Bash(-e 's/ContactDiscovery/PeerDiscovery/g' )",
      "Bash(-e 's/contact discovery/peer discovery/g' )",
      "Bash(-e 's/Contact /Peer /g' )",
      "Bash(-e 's/contact /peer /g' )",
      "Bash(-e 's/contact\\./peer./g' )",
      "Bash(syft_client/sync/discovery.py)",
      "Bash(-e 's/send_to_contacts/send_to_peers/g' )",
      "Bash(-e 's/Send to all contacts/Send to all peers/g' )",
      "Bash(-e 's/Dict mapping contact/Dict mapping peer/g' )",
      "Bash(-e 's/contacts = /peers = /g' )",
      "Bash(-e 's/self\\.sync\\.contacts/self.sync.peers/g' )",
      "Bash(-e 's/No contacts/No peers/g' )",
      "Bash(-e 's/contact in contacts/peer in peers/g' )",
      "Bash(-e 's/\\[contact\\]/[peer]/g' )",
      "Bash(syft_client/sync/sender.py)",
      "Bash(-e 's/contact_email/peer_email/g' )",
      "Bash(-e 's/contact\\[@\\]/peer[@]/g' )",
      "Bash(-e 's/contacts_list/peers_list/g' )",
      "Bash(-e 's/ContactManager/PeerManager/g' )",
      "Bash(-e 's/\\.contacts\\.contacts/.peers.peers/g' )",
      "Bash(-e 's/\\.contacts\\./.peers./g' )",
      "Bash(-e 's/contact: Contact/peer: Peer/g' )",
      "Bash(-e 's/contact\\./peer./g' )",
      "Bash(-e 's/from \\.contact_model import Contact/from .peer_model import Peer/g' )",
      "Bash(-e 's/Contact\\'/Peer''/g' )",
      "Bash(-e 's/\"\"Contact\"\"/\"\"Peer\"\"/g' )",
      "Bash(-e 's/transport_stats = contact/transport_stats = peer/g' )",
      "Bash(syft_client/sync/transport_negotiator.py)",
      "Bash(-e 's/from \\.contact_model import Contact/from .peer_model import Peer/g' )",
      "Bash(-e 's/contact: Contact/peer: Peer/g' )",
      "Bash(-e 's/contact: The contact/peer: The peer/g' )",
      "Bash(-e 's/contact\\./peer./g' )",
      "Bash(-e 's/Contact object/Peer object/g' )",
      "Bash(-e 's/ contact,/ peer,/g' )",
      "Bash(true)"
    ],
    "deny": []
  }
}